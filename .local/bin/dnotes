#!/bin/bash

# A dmenu prompt to open and modify joplin notes inside neovim.
# It requires joplingo-cli utility.
# (https://github.com/ciminoV/joplingo-cli.git)
# Dependencies: dmenu, joplingo-cli

# Process the JSON piped input and populate an associative array with keys: id and values: title id
# (The spacing between title and id is for output purposes only)
declare -A items
json_input=$(echo $(joplingo-cli getallnotes id title -f title -d asc))
while IFS= read -r item; do
    id=$(echo "$item" | jq -r '.id')
    title=$(echo "$item" | jq -r '.title')
	items["$id"]="$(printf "%-*s %s" "30" "$title" "$id")"
done < <(echo "$json_input" | jq -c '.[]')

# Select a note from title and id
selected_item=$(printf "%s\n" "${items[@]}" | dmenu -i -p "Open note" -l 10)

# Check if a note is selected
if [[ -n $selected_item ]]; then
	selected_id="${selected_item##* }" # get only the id part of the value
    note_body=$(joplingo-cli getnote "$selected_id" body | jq -r '.body' | sed 's/\\n/\n/g') # pretty format the body

    # Create a temporary file with the note body and open it in nvim
    temp_file=$(mktemp /tmp/joplinote-XXXXXX --suffix=.md)
    echo -e "$note_body" > "$temp_file"
    st -e nvim -p "$temp_file"

	# Update remote note body
	joplingo-cli updatenote "$selected_id" body "$(cat $temp_file)"    

    # Clean up the temporary file
    trap 'rm -f "$temp_file"' EXIT
fi
